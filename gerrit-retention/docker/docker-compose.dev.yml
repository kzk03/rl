# 開発環境用Docker Compose設定

version: "3.8"

services:
  # 開発用アプリケーション
  gerrit-retention-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    container_name: gerrit-retention-dev
    environment:
      - ENVIRONMENT=development
      - GERRIT_URL=${GERRIT_URL:-https://gerrit-dev.example.com}
      - GERRIT_USERNAME=${GERRIT_USERNAME}
      - GERRIT_PASSWORD=${GERRIT_PASSWORD}
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=text
      - ML_DEVICE=cpu
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../:/app:cached # 開発時はソースコードをマウント
      - dev_data:/app/data
      - dev_models:/app/models
      - dev_logs:/app/logs
      - dev_outputs:/app/outputs
    ports:
      - "8080:8080" # アプリケーション
      - "8888:8888" # Jupyter Notebook
      - "8081:8081" # メトリクス
    command: ["python", "scripts/run_full_pipeline.py", "--development"]
    restart: unless-stopped
    depends_on:
      - redis-dev
      - postgres-dev
    networks:
      - gerrit-retention-dev-network
    stdin_open: true
    tty: true

  # 開発用Redis
  redis-dev:
    image: redis:7-alpine
    container_name: gerrit-retention-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - gerrit-retention-dev-network

  # 開発用PostgreSQL
  postgres-dev:
    image: postgres:15-alpine
    container_name: gerrit-retention-postgres-dev
    environment:
      - POSTGRES_DB=gerrit_retention_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - gerrit-retention-dev-network

  # Jupyter Notebook（開発用）
  jupyter:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    container_name: gerrit-retention-jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-development}
    volumes:
      - ../:/app:cached
      - jupyter_data:/home/gerrit/.jupyter
    ports:
      - "8888:8888"
    command: >
      bash -c "
        jupyter lab 
          --ip=0.0.0.0 
          --port=8888 
          --no-browser 
          --allow-root 
          --notebook-dir=/app
          --ServerApp.token='${JUPYTER_TOKEN:-development}'
      "
    restart: unless-stopped
    networks:
      - gerrit-retention-dev-network

volumes:
  dev_data:
  dev_models:
  dev_logs:
  dev_outputs:
  redis_dev_data:
  postgres_dev_data:
  jupyter_data:

networks:
  gerrit-retention-dev-network:
    driver: bridge
