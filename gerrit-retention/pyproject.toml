[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gerrit-retention"
version = "0.1.0"
description = "Gerrit開発者定着予測システム - 開発者の沸点予測とレビュー受諾最適化"
authors = [
    {name = "Gerrit Retention Team", email = "team@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core ML/AI dependencies
    "torch>=2.3.0",
    "torch-geometric>=2.5.0",
    "stable-baselines3>=2.3.0",
    "scikit-learn>=1.7.0",
    # "xgboost>=2.0.0",  # OpenMP dependency issue on macOS
    
    # RL Environment
    "gymnasium>=0.29.0",
    "pettingzoo>=1.25.0",
    "shimmy>=2.0.0",
    "supersuit>=3.10.0",
    
    # Data processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    
    # Configuration & utilities
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "pyyaml>=6.0.2",
    "tqdm>=4.65.0",
    "python-dotenv>=1.0.0",
    
    # HTTP client for Gerrit API
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    
    # Web API framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    
    # Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # Feature engineering (SHAP is optional due to compatibility issues)
    # "shap>=0.46.0",
    
    # Logging
    "loguru>=0.7.0",
    
    # Testing utilities
    "pytest>=8.3.5",
    "pytest-cov>=4.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.11.6",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/example/gerrit-retention"
Repository = "https://github.com/example/gerrit-retention"
Documentation = "https://gerrit-retention.readthedocs.io"
"Bug Tracker" = "https://github.com/example/gerrit-retention/issues"

[project.scripts]
gerrit-retention = "gerrit_retention.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
gerrit_retention = ["configs/*.yaml", "configs/**/*.yaml"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gerrit_retention"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torch_geometric.*",
    "stable_baselines3.*",
    "gymnasium.*",
    "pettingzoo.*",
    "shap.*",
    "plotly.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=gerrit_retention",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/gerrit_retention"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]